#!/bin/bash
# get/save/load git-described version + SHA1 build id, usage: git-id [dir-to-save/read-ids]

clean_dirty() {
    if [ -n "$dirty" ]; then
        files=$(git diff | grep ^diff | grep -v a/go.mod | grep -v a/go.sum)
        if [ -z "$files" ]; then
            dirty=""
        fi
    fi
}

unknown_version() {
    v=0.0.0
    if [ -d .git ]; then
        sha=$(git rev-parse --short HEAD)
        commits=$(git rev-list --count HEAD)
        dirty=$(git diff --quiet || echo "-dirty")
        clean_dirty
        echo "v$v-$commits-g$sha$dirty"
    else
        echo "v$v-$(date +%Y%m%d%H%M)"
    fi
}

get_gitids () {
    if [ -d .git ]; then
        version=$(git describe --long --dirty 2>/dev/null || unknown_version)
        buildid=$(git rev-parse --short HEAD || echo unknown)
        if [ -n "$DIR" ]; then
            if [ "$version" != "$(cat $DIR/git-version 2>/dev/null)" ]; then
                echo "$version" > $DIR/git-version
            fi
            if [ "$buildid" != "$(cat $DIR/git-buildid 2>/dev/null)" ]; then
                echo "$buildid" > $DIR/git-buildid
            fi
        fi
    else
        DIR=${DIR:-.}
        version=$(cat $DIR/git-version || unknown_version)
        buildid=$(cat $DIR/git-buildid || echo unknown)
    fi
}

print_gitids () {
    # semverish described tags: <numver>[-<alnum-prerel>][-<commits>-g<shaone>][-dirty]
    case $version in
        v[0-9.]**-g[0-9a-f]*)
            fulltag=${version#v}
            numver=${fulltag%%-*}
            remain=${fulltag#*-}; clean=${remain%-dirty}; dirty=${remain#$clean}
            shaone=${clean##*-g}; remain=${clean%-g[0-9a-z]*}
            prerel=${remain%-[0-9]*}; commits=${remain#${prerel}-}
            [ "$prerel" = "$commits" ] && prerel=""
            [ -n "$prerel" ] && prerel="+$prerel"
            [ "$commits" != "0" ] && commits="-$commits-g${shaone}" || commits=""
            #echo "version:[$version], numver:[$numver], prerel:[$prerel], commits:[$commits], shaone:[$shaone], dirty:[$dirty]" 1>&2
            clean_dirty
            version=$numver$prerel$commits$dirty
            buildid=$buildid
            ;;
        *)
            version="$(unknown_version)"
            ;;
    esac
    echo "gitbuildid=$buildid"
    echo "gitversion=$version"
    rpmversion=$(echo $numver$prerel$commits$dirty | tr '+-' '_')
    debversion=$numver$prerel$commits$dirty
    echo "rpmversion=$rpmversion"
    echo "debversion=$debversion"
}

#######
version=""
buildid=""
DIR=""

case $# in
    0) ;;
    1) DIR=$1; mkdir -p $DIR;;
    *)
        echo "$0: unknown options/arguments: $@" 1>&2
        echo "usage: $0 [dir-to-save/read-ids]" 1>&2
        exit 1;;
esac

get_gitids
print_gitids
